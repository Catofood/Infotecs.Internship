// <auto-generated />
using System;
using Infotecs.Internship.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infotecs.Internship.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infotecs.Internship.Domain.Entities.ProcessingFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("files", (string)null);
                });

            modelBuilder.Entity("Infotecs.Internship.Domain.Entities.ProcessingResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AverageDurationTimeSeconds")
                        .HasColumnType("bigint")
                        .HasColumnName("avg_execution_duration_seconds");

                    b.Property<double>("AverageValue")
                        .HasColumnType("double precision")
                        .HasColumnName("avg_value");

                    b.Property<long>("DateDeltaSeconds")
                        .HasColumnType("bigint")
                        .HasColumnName("date_delta_seconds");

                    b.Property<DateTimeOffset>("EarliestStartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("earliest_start_date");

                    b.Property<double>("MaxValue")
                        .HasColumnType("double precision")
                        .HasColumnName("max_value");

                    b.Property<double>("MedianValue")
                        .HasColumnType("double precision")
                        .HasColumnName("median_value");

                    b.Property<double>("MinValue")
                        .HasColumnType("double precision")
                        .HasColumnName("min_value");

                    b.Property<long>("ParentFileId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_file_id");

                    b.HasKey("Id");

                    b.HasIndex("ParentFileId")
                        .IsUnique();

                    b.ToTable("results", (string)null);
                });

            modelBuilder.Entity("Infotecs.Internship.Domain.Entities.ProcessingValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ExecutionDurationSeconds")
                        .HasColumnType("bigint")
                        .HasColumnName("execution_duration_seconds");

                    b.Property<long>("ParentFileId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_file_id");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("started_at");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ParentFileId");

                    b.ToTable("values", (string)null);
                });

            modelBuilder.Entity("Infotecs.Internship.Domain.Entities.ProcessingResult", b =>
                {
                    b.HasOne("Infotecs.Internship.Domain.Entities.ProcessingFile", "ParentFile")
                        .WithOne("Result")
                        .HasForeignKey("Infotecs.Internship.Domain.Entities.ProcessingResult", "ParentFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentFile");
                });

            modelBuilder.Entity("Infotecs.Internship.Domain.Entities.ProcessingValue", b =>
                {
                    b.HasOne("Infotecs.Internship.Domain.Entities.ProcessingFile", "ParentFile")
                        .WithMany("Values")
                        .HasForeignKey("ParentFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentFile");
                });

            modelBuilder.Entity("Infotecs.Internship.Domain.Entities.ProcessingFile", b =>
                {
                    b.Navigation("Result");

                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
